version: '3.8'

services:
  db:
    # ... db 서비스 설정은 그대로 ...
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./init.db.sql:/docker-entrypoint-initdb.d/init.db.sql
      - db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u$$MYSQL_USER", "-p$$MYSQL_PASSWORD"]
      interval: 10s
      timeout: 15s
      retries: 15
      start_period: 90s

  web:
    build: ./app
    container_name: flask_app
    ports:
      - "5000:5000"
    volumes:
      - ./app:/app
    environment:
      DATABASE_URL: ${DATABASE_URL}
    networks:
      - app_network
    env_file:
      - ./.env
    restart: always
    depends_on:
      db:
        condition: service_healthy
    # [수정] python 직접 실행 대신 wait-for-db.sh 스크립트를 통해 실행
    command: ["./wait-for-db.sh", "db", "python", "-m", "main"]

networks:
  app_network:
    driver: bridge

volumes:
  db_data: