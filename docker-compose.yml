version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./init.db.sql:/docker-entrypoint-initdb.d/init_db.sql
      - db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - app_network
    healthcheck: # <-- 이 부분 추가
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u$$MYSQL_USER", "-p$$MYSQL_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s # MySQL이 초기화될 충분한 시간을 줍니다.

  web:
    build: ./app
    container_name: flask_app
    ports:
      - "5000:5000"
    volumes:
      - ./app:/app
    environment:
      DATABASE_URL: ${DATABASE_URL}
    # depends_on: # <-- 이 부분을 healthcheck와 service_healthy로 대체
    #   - db
    networks:
      - app_network
    env_file:
      - ./.env
    restart: on-failure # <-- 추가: 컨테이너가 실패하면 자동으로 재시작
    depends_on: # <-- 이 부분을 유지하고, service_healthy 조건을 추가
      db:
        condition: service_healthy

networks:
  app_network:
    driver: bridge

volumes:
  db_data: